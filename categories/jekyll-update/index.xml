<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jekyll update on Blog</title><link>https://kevinkle.in/categories/jekyll-update/</link><description>Recent content in jekyll update on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Aug 2018 16:38:07 +0200</lastBuildDate><atom:link href="https://kevinkle.in/categories/jekyll-update/index.xml" rel="self" type="application/rss+xml"/><item><title>Time Is Money</title><link>https://kevinkle.in/posts/2018-07-29-tim/</link><pubDate>Fri, 03 Aug 2018 16:38:07 +0200</pubDate><guid>https://kevinkle.in/posts/2018-07-29-tim/</guid><description>This post is about a browser add-on that is hopefully a drop in the ocean towards a rather ambitious goal. It&amp;rsquo;s called TimeIsMoney.
Motivation A while back I listened to Sam Harris&amp;rsquo; podcast with Tristan Harris. What remained was following:
I agreed that most technology is agnostic. At the same time, a lot of technology stemming from or being a byproduct of the attention economy is rather geared towards a usage that is a net disadvantage for the user.</description></item><item><title>Matrix Factorization in Collaborative Filtering</title><link>https://kevinkle.in/posts/2018-07-10-cf-mf/</link><pubDate>Tue, 10 Jul 2018 16:38:07 +0200</pubDate><guid>https://kevinkle.in/posts/2018-07-10-cf-mf/</guid><description>The Task We are given a set of tuples representing user-movie ratings, \(\mathcal{R} = \{(i,j,r)\}\), where \(i\) is the user index, \(j\) is the movie index and \(r \in [0, \dots, 5]\) the rating. In the most common scenarios, only a fraction of all user-movie pairs are rated, hence we can talk about sparse data. In other words, most users have only rated a few movies. Now we want to obtain sensible predictions for movies a user has not rated.</description></item></channel></rss>